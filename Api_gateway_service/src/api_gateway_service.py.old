# api_gateway.py
from fastapi import FastAPI, Request, HTTPException
import httpx
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()

# Direcciones de los microservicios
SERVICES = {
    "suma": "http://localhost:8001",
    "resta": "http://resta_service:8002",
    "multiplica": "http://multiplica_service:8003",
    "divide": "http://divide-service:8004"
}

# Configurar CORS para este servicio
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.api_route("/{service}/{path:path}", methods=["GET", "POST", "PUT", "DELETE"])
async def gateway(service: str, path: str, request: Request):
    if service not in SERVICES:
        raise HTTPException(status_code=404, detail="Servicio no encontrado")

    service_url = SERVICES[service]
    method = request.method
    async with httpx.AsyncClient() as client:
        try:
            # Preparar el cuerpo de la solicitud
            body = await request.body()
            # Si el cuerpo no está vacío y la solicitud es de tipo POST, PUT o DELETE, enviar como JSON
            if body and method in ["POST", "PUT", "DELETE"]:
                body = await request.json()
            else:
                body = None

            # Hacer la llamada al servicio
            response = await client.request(method, f"{service_url}/{path}", json=body)

            # Verificar si hay una redirección
            if response.is_redirect:
                # Puedes decidir cómo manejar las redirecciones aquí
                raise HTTPException(status_code=307, detail="Redirección temporal")

            # Devolver la respuesta como JSON
            return response.json()
        except httpx.RequestError as exc:
            # Aquí puedes manejar errores de conexión, timeout, etc.
            raise HTTPException(status_code=503, detail=f"Error en la comunicación con el servicio {service}: {exc}")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=80)